{"version":3,"sources":["AppHome.js","admin/Administrator.js","config/admin.js","action/agentAccount.js","toasts/ToastMessage.js","admin/component/registercomponent/Register.js","admin/container/register/Register.js","admin/component/logincomponent/Login.js","admin/container/login/Login.js","router/Admin.js","App.js","serviceWorker.js","reducers/agentReducer.js","index.js","admin/account.module.css","logo.svg"],"names":["App","className","src","logo","alt","href","target","rel","Adiminstrator","id","class","Component","config","set","development","serverUrl","production","loadingImage","agent_account_added","unique_email","unique_email_error","status_success","status_failure","email_address_error","input_password_error","user_found_success","success_toast_color","failure_toast_color","env","Example","props","useState","state","showA","setShowA","toggleShowA","classer","push","show","setTimeout","style","backgroundColor","color","join","role","aria-live","aria-atomic","message","type","data-dismiss","onClick","aria-hidden","connect","acc","agent","loading","status","dispatch","useDispatch","history","useHistory","signup_button","useRef","change_email","get","url","payload","checkRedirection","initialValues","first_name","last_name","email_address","input_password","repeat_password","onSubmit","values","setSubmitting","value","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","res2","catch","error","console","accountCreater","validationSchema","Yup","shape","required","email","min","oneOf","touched","errors","handleChange","handleBlur","handleSubmit","current","setAttribute","classList","remove","focus","add","removeAttribute","name","placeholder","onChange","onBlur","e","ref","classes","imageCss","Register","to","loginAction","parseInt","Login","BasicExample","exact","path","component","Administrator","Boolean","window","location","hostname","match","data","user_id","agentReducer","action","err","stater","status_code","_id","localStorage","setItem","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b01621f2.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React,{Component,Fragment} from 'react';\nclass Adiminstrator extends Component{\n  render(){\n    return(\n      <Fragment>\n        <div id=\"wrapper\">\n          <ul class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n            <a class=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\n              <div class=\"sidebar-brand-icon rotate-n-15\">\n                <i class=\"fa fa-home\"></i>\n              </div>\n              <div class=\"sidebar-brand-text mx-3\">SB Admin <sup>2</sup></div>\n            </a>\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" href=\"index.html\">\n                <i class=\"fa fa-user-circle-o\"></i>\n                <span>Dashboard</span></a>\n            </li>\n          </ul>\n        </div>\n      </Fragment>\n    )\n  }\n}\nexport default Adiminstrator;\n","import config from 'react-global-configuration';\nconfig.set({\n   development:{\n      serverUrl: 'http://localhost:5000/',\n   },\n   production:{\n     serverUrl: 'http://localhost:5000/',\n   },\n   loadingImage: 'http://localhost/reactApi/wp-content/uploads/2020/05/4cf423dc7c2321aa9b733c20c53752b7.gif',\n   agent_account_added: 'You are successfully registered with your account',\n   unique_email: 'email_address',\n   unique_email_error: 'Email address already in use please enter a unique value',\n   status_success: '200',\n   status_failure: '400',\n   email_address_error: 'Entered email doesnot exist. Please re check.',\n   input_password_error: 'Password entered for the user is incorrect. Please check again',\n   user_found_success: 'You are successfully login. Please wait while we are redirecting',\n   success_toast_color: '#53ae61',\n   failure_toast_color: '#e580ba'\n });\n","import config from 'react-global-configuration';\nimport '../config/admin';\nconst env = !process.env.NODE_ENV || process.env.NODE_ENV === 'development'?'development':'production';\n\nexport const accountCreater = (value)=>{\n  const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json','Access-Control-Allow-Origin': '*' },\n      body: JSON.stringify(value),\n  };\n  return(dispatch)=>{\n    fetch(config.get(''+env+'.serverUrl')+'api/agent/add',requestOptions)\n    .then(res=>res.json())\n    .then(res2=>{\n       dispatch({type:'agent_account',payload:res2});\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    })\n  }\n};\n\nexport const loginAction = (value)=>{\n  const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(value),\n  };\n  return(dispatch)=>{\n    fetch(config.get(''+env+'.serverUrl')+'api/agent/login',requestOptions)\n    .then(res=>res.json())\n    .then(res2=>{\n       dispatch({type:'login_action',payload:res2});\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    })\n  }\n};\n","import React, { useState,Fragment } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst Example = props => {\n   const [showA, setShowA] = useState(props.state==='true'?true:false);\n   const toggleShowA = () => setShowA(!showA);\n   let classer = [];\n   classer.push('fade');\n   classer.push('toast');\n   if(props.show==='show'&&showA===true){\n      classer.push(props.show);\n      setTimeout(() => {\n        toggleShowA()\n      }, 5000);\n   }\n   const style = {backgroundColor:props.color};\n   return (\n   <Fragment>\n   <div className={classer.join(\" \")} style={style} role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n     <div class=\"toast-header\">\n     <strong class=\"mr-auto\">{props.message}</strong>\n     <button type=\"button\" className=\"close ml-2 mb-1\" data-dismiss=\"toast\" onClick={toggleShowA}>\n       <span aria-hidden=\"true\">×</span>\n       <span class=\"sr-only\">Close</span>\n     </button>\n    </div>\n    </div>\n  </Fragment>\n  );\n}\nexport default Example;\n","import React,{useRef} from 'react';\nimport {connect,useDispatch} from 'react-redux';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport config from 'react-global-configuration';\nimport '../../../config/admin';\nimport classes from '../../account.module.css';\nimport {accountCreater} from '../../../action/agentAccount';\nimport Toast from '../../../toasts/ToastMessage';\nimport { useHistory } from \"react-router-dom\";\n\nconst mapStateToProps = (state)=>{\n  const acc = state.agent;\n  return{\n    loading:acc.loading,\n    status:acc.status,\n  }\n}\nconst checkRedirection = (history,url,dispatch) =>{\n  dispatch({type:'reset_data',payload:'reset'});\n  setTimeout(() => {\n   history.push(url);\n }, 4000);\n}\nconst  Register = props =>{\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const signup_button = useRef();\n    const change_email = useRef();\n    let { loading,status }=props;\n    if(status===config.get('status_success')){\n      checkRedirection(history,'/login',dispatch);\n    }\n    return(\n        <Formik initialValues={{first_name:'',last_name:'',email_address:'',input_password:'',repeat_password:''}} onSubmit={(values, {setSubmitting})=>{\n             dispatch({type:'add_loader',payload:'load'});\n             dispatch(accountCreater(values));\n            }}\n            validationSchema = {Yup.object().shape({\n              first_name:Yup.string().required(\"Required\"),\n              last_name:Yup.string().required(\"Required\"),\n              email_address:Yup.string().email().required(\"Email must be required and should be in a valid format\"),\n              input_password:Yup.string().min(8, 'Password is too short - should be 8 chars minimum.').required(\"Required\"),\n              repeat_password:Yup.string().required(\"Required\").oneOf([Yup.ref('input_password'), null], 'Repeat Password must be equal to password'),\n            })}\n           >\n        {props=>{\n        const {\n          touched,errors,handleChange,handleBlur,handleSubmit\n        }=props;\n        const testData = () =>{\n          status=null;\n          change_email.current.classList.remove('error');\n          errors.email_address=null;\n        }\n        if(status===config.get('status_success')&&signup_button.current){\n          signup_button.current.setAttribute('disabled',true);\n          change_email.current.classList.remove('error');\n          errors.email_address=null;\n        }\n        if(status===config.get('status_failure')&&change_email.current){\n          change_email.current.focus();\n          change_email.current.classList.add('error');\n          signup_button.current.removeAttribute('disabled');\n          errors.email_address=config.get('unique_email_error');\n        }\n        return(\n                <form className=\"user\" onSubmit={handleSubmit}>\n                <div className=\"form-group row\">\n                {status===config.get('status_success')&&\n                <Toast message={config.get('agent_account_added')} show=\"show\" state=\"true\"/>}\n                    <div className=\"col-sm-6 mb-3 mb-sm-0\">\n                        <input type=\"text\" className=\"form-control form-control-user\" id=\"first_name\" name=\"first_name\" placeholder=\"First Name\" onChange={handleChange} onBlur={handleBlur}/>\n                        {errors.first_name&&touched.first_name&&(\n                          <div>{errors.first_name}</div>\n                        )}\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <input type=\"text\" className=\"form-control form-control-user\" id=\"last_name\" name=\"last_name\" placeholder=\"Last Name\" onChange={handleChange} onBlur={handleBlur}/>\n                        {errors.last_name&&touched.last_name&&(\n                          <div>{errors.last_name}</div>\n                        )}\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\" className=\"form-control form-control-user\" id=\"email_address\" name=\"email_address\" placeholder=\"Email Address\" onChange={(e)=>{ props.handleChange(e); testData()}} ref={change_email} onBlur={handleBlur}/>\n                    {errors.email_address&&touched.email_address&&(\n                      <div>{errors.email_address}</div>\n                    )}\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-6 mb-3 mb-sm-0\">\n                        <input type=\"password\" className=\"form-control form-control-user\" id=\"input_password\" name=\"input_password\" placeholder=\"Password\" onChange={handleChange} onBlur={handleBlur}/>\n                        {errors.input_password&&touched.input_password&&(\n                          <div>{errors.input_password}</div>\n                        )}\n\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <input type=\"password\" className=\"form-control form-control-user\" id=\"repeat_password\" name=\"repeat_password\" placeholder=\"Repeat Password\" onChange={handleChange} onBlur={handleBlur}/>\n                        {errors.repeat_password&&touched.repeat_password&&(\n                          <div>{errors.repeat_password}</div>\n                        )}\n                    </div>\n                </div>\n                { loading!==null&&\n                 <img src={config.get('loadingImage')} className={classes.imageCss} alt=\"Loading..\"/>\n                }\n\n                <button className=\"btn btn-primary btn-user btn-block\" type=\"submit\" ref={signup_button}> Register Account</button>\n            </form>\n        )\n    }}\n    </Formik>\n    )\n}\nexport default connect(mapStateToProps)(Register);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport  './rgister.css';\n\nimport RegisterForm from '../../component/registercomponent/Register';\nfunction Register(){\n    return(\n        <div className=\"container\">\n            <div className=\"card o-hidden border-0 shadow-lg my-5\">\n                <div className=\"card-body p-0\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-5 d-none d-lg-block bg-register-image\"></div>\n                        <div className=\"col-lg-7\">\n                            <div className=\"p-5\">\n                                <div className=\"text-center\">\n                                    <h1 className=\"h4 text-gray-900 mb-4\">Create an Account!</h1>\n                                </div>\n\n                                <RegisterForm/>\n                                <div className=\"text-center\">\n                                    <a className=\"small\" href=\"forgot-password.html\">Forgot Password?</a>\n                                </div>\n                                <div className=\"text-center\">\n                                    <Link to=\"/login\" className=\"small\">Already have an account? Login!</Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Register;\n","import React,{useRef} from 'react';\nimport {connect,useDispatch} from 'react-redux';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport config from 'react-global-configuration';\nimport '../../../config/admin';\nimport classes from '../../account.module.css';\nimport {loginAction} from '../../../action/agentAccount';\nimport Toast from '../../../toasts/ToastMessage';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst mapStateToProps = (state)=>{\n  const acc = state.agent;\n  return{\n    loading:acc.loading,\n    status:acc.status,\n    error:acc.error\n  }\n}\n\nconst checkRedirection = (history,url,dispatch) =>{\n  dispatch({type:'reset_data',payload:'reset'});\n  setTimeout(() => {\n   history.push(url);\n }, 4000);\n}\n\nconst Login = props =>{\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let {loading,status,error} = props;\n  const signup_button = useRef();\n  return(\n    <Formik initialValues={{email_address:'',input_password:''}} onSubmit={(values, {setSubmitting})=>{\n          dispatch({type:'add_loader',payload:'load'});\n          dispatch(loginAction(values));\n        }}\n        validationSchema = {Yup.object().shape({\n          email_address:Yup.string().email().required(\"Email must be required and should be in a valid format\"),\n          input_password:Yup.string().min(8, 'Password is too short - should be 8 chars minimum.').required(\"Required\")\n        })}\n       >\n    {props=>{\n      const {\n        touched,errors,handleChange,handleBlur,handleSubmit\n      }=props;\n      if(status===config.get('status_success')&&signup_button.current){\n        signup_button.current.setAttribute('disabled',true);\n        checkRedirection(history,'/admin',dispatch);\n      }\n      let message = \"\"; let color = \"\";\n\n      if(status===parseInt(config.get('status_failure'))){\n        message = config.get(''+error+'_error');\n        color = config.get('failure_toast_color');\n      }\n      if(status===config.get('status_success')){\n        message = config.get('user_found_success');\n        color = config.get('success_toast_color');\n      }\n\n    return(\n      <form className=\"user\" onSubmit={handleSubmit}>\n        {status!==null&&\n        <Toast message={message} show=\"show\" color={color} state=\"true\"/>}\n        <div className=\"form-group\">\n            <input type=\"email\" className=\"form-control form-control-user\" id=\"email_address\" name=\"email_address\" placeholder=\"Email Address\" onChange={handleChange}  onBlur={handleBlur} />\n            {errors.email_address&&touched.email_address&&(\n              <div>{errors.email_address}</div>\n            )}\n        </div>\n        <div className=\"form-group\">\n        <input type=\"password\" className=\"form-control form-control-user\" id=\"input_password\" name=\"input_password\" placeholder=\"Password\" onChange={handleChange} onBlur={handleBlur} />\n          {errors.input_password&&touched.input_password&&(\n            <div>{errors.input_password}</div>\n          )}\n        </div>\n        { loading!==null&&\n         <img src={config.get('loadingImage')} className={classes.imageCss} alt=\"Loading..\"/>\n        }\n        <button className=\"btn btn-primary btn-user btn-block\" type=\"submit\" ref={signup_button} >Login</button>\n      </form>\n      )\n    }}\n    </Formik>\n    )\n};\nexport default connect(mapStateToProps)(Login);\n","import React,{Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport LoginForm from '../../component/logincomponent/Login';\nclass Login extends Component{\n  render(){\n    return(\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n\n          <div className=\"col-xl-10 col-lg-12 col-md-9\">\n\n            <div className=\"card o-hidden border-0 shadow-lg my-5\">\n              <div className=\"card-body p-0\">\n                <div className=\"row\">\n                  <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                  <div className=\"col-lg-6\">\n                    <div className=\"p-5\">\n                      <div className=\"text-center\">\n                        <h1 className=\"h4 text-gray-900 mb-4\">Welcome Back!</h1>\n                      </div>\n                       <LoginForm/>\n                      <hr/>\n                      <div className=\"text-center\">\n\n                        <a className=\"small\" href=\"forgot-password.html\">Forgot Password?</a>\n                      </div>\n                      <div className=\"text-center\">\n                        <Link to=\"/register\" className=\"small\">Create an Account!</Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n\n    )\n  }\n}\nexport default Login;\n","import React from \"react\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Home from '../AppHome';\nimport Administrator from '../admin/Administrator';\nimport Register from '../admin/container/register/Register';\nimport Login from '../admin/container/login/Login';\nexport default function BasicExample() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/admin/\" component = {Administrator} />\n      <Route exact path=\"/register/\" component = {Register} />\n      <Route exact path=\"/login/\" component = {Login} />\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport Admin from './router/Admin';\nexport default function BasicExample() {\n  return (\n    <Router>\n      <Admin/>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import config from 'react-global-configuration';\nimport '../config/admin';\n\nconst data = {\n  loading:null,\n  user_id:null,\n  status:null,\n  error:null,\n};\nconst agentReducer = (state=data,action) =>{\n  let {type,payload} = action;\n   switch(type) {\n     case 'reset_data':\n     return{\n       ...state,\n       loading:null,\n       user_id:null,\n     }\n      case 'agent_account':\n      return{\n        ...state,\n        loading:null,\n        user_id:payload,\n        status:payload!==config.get('unique_email')?config.get('status_success'):config.get('status_failure')\n      }\n\n      case 'login_action':\n      let err = null;\n      let stater = null;\n      if(payload.status_code){\n         err = payload.error;\n         stater = payload.status_code;\n      }\n      else{\n        const {first_name,last_name,_id} = payload;\n        localStorage.setItem('account', {user_id:_id,first_name:first_name,last_name:last_name});\n        err = null;\n        stater = config.get('status_success');\n      }\n      return{\n        ...state,\n        status: stater,\n        loading: null,\n        error: err\n      }\n\n      case 'add_loader':\n      return{\n        ...state,\n        loading:payload,\n        status:null,\n      }\n\n      case 'change_status':\n      return{\n        ...state,\n        status:null\n      }\n\n      default:\n      return state\n   }\n}\nexport default agentReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/sb-admin-2.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore,combineReducers,applyMiddleware } from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport agentReducer from './reducers/agentReducer';\nconst rootReducer = combineReducers({\n  agent:agentReducer,\n})\nconst store = createStore(rootReducer,applyMiddleware(thunk));\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coverClass\":\"account_coverClass__1Qcbq\",\"headingText\":\"account_headingText__P4hOL\",\"imageCss\":\"account_imageCss__2jegT\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}
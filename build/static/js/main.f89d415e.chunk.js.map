{"version":3,"sources":["logo.svg","AppHome.js","admin/Administrator.js","config/admin.js","action/agentAccount.js","admin/component/registercomponent/Register.js","admin/container/register/Register.js","router/Admin.js","App.js","serviceWorker.js","reducers/agentReducer.js","index.js"],"names":["module","exports","App","className","src","logo","alt","href","target","rel","Adiminstrator","id","class","Component","config","set","development","serverUrl","production","Register","props","dispatch","useDispatch","initialValues","first_name","last_name","email_address","input_password","repeat_password","onSubmit","values","setSubmitting","value","requestOptions","method","headers","body","JSON","stringify","fetch","get","then","res","json","res2","type","payload","catch","error","console","accountCreater","log","validationSchema","Yup","shape","required","email","min","oneOf","touched","errors","handleChange","handleBlur","handleSubmit","name","placeholder","onChange","onBlur","BasicExample","exact","path","component","Administrator","Boolean","window","location","hostname","match","data","loading","status","message","agentReducer","state","action","rootReducer","combineReducers","agent","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f89d415e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React,{Component,Fragment} from 'react';\nclass Adiminstrator extends Component{\n  render(){\n    return(\n      <Fragment>\n        <div id=\"wrapper\">\n          <ul class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n            <a class=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\n              <div class=\"sidebar-brand-icon rotate-n-15\">\n                <i class=\"fa fa-home\"></i>\n              </div>\n              <div class=\"sidebar-brand-text mx-3\">SB Admin <sup>2</sup></div>\n            </a>\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" href=\"index.html\">\n                <i class=\"fa fa-user-circle-o\"></i>\n                <span>Dashboard</span></a>\n            </li>\n          </ul>\n        </div>\n      </Fragment>\n    )\n  }\n}\nexport default Adiminstrator;\n","import config from 'react-global-configuration';\nconfig.set({\n   development:{\n      serverUrl: 'http://localhost:5000/',\n   },\n   production:{\n     serverUrl: 'http://localhost:5000/',\n   }\n });\n","import config from 'react-global-configuration';\nimport '../config/admin';\nconst env = !process.env.NODE_ENV || process.env.NODE_ENV === 'development'?'development':'production';\nexport const accountCreater = (value)=>{\n  const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json','Access-Control-Allow-Origin': '*' },\n      body: JSON.stringify(value),\n  };\n  return(dispatch)=>{\n    fetch(config.get(''+env+'.serverUrl')+'agent/add',requestOptions)\n    .then(res=>res.json())\n    .then(res2=>{\n       dispatch({type:'agent_account',payload:res2});\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    })\n  }\n};\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport {accountCreater} from '../../../action/agentAccount';\n\nconst  Register = props =>{\n    const dispatch = useDispatch();\n    return(\n        <Formik initialValues={{first_name:'',last_name:'',email_address:'',input_password:'',repeat_password:''}} onSubmit={(values, {setSubmitting})=>{\n            //dispatch({type:'add_loader',payload:'load'});\n             dispatch(accountCreater(values));\n             console.log(values);\n            }}\n            validationSchema = {Yup.object().shape({\n              first_name:Yup.string().required(\"Required\"),\n              last_name:Yup.string().required(\"Required\"),\n              email_address:Yup.string().email().required(\"Email must be required and should be in a valid format\"),\n              input_password:Yup.string().min(8, 'Password is too short - should be 8 chars minimum.').required(\"Required\"),\n              repeat_password:Yup.string().required(\"Required\").oneOf([Yup.ref('input_password'), null], 'Repeat Password must be equal to password'),\n            })}\n           >\n        {props=>{\n        const {\n          touched,errors,handleChange,handleBlur,handleSubmit\n        }=props;\n        return(\n                <form class=\"user\" onSubmit={handleSubmit}>\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-6 mb-3 mb-sm-0\">\n                        <input type=\"text\" class=\"form-control form-control-user\" id=\"first_name\" name=\"first_name\" placeholder=\"First Name\" onChange={handleChange} onBlur={handleBlur}/>\n                        {errors.first_name&&touched.first_name&&(\n                          <div>{errors.first_name}</div>\n                        )}\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <input type=\"text\" class=\"form-control form-control-user\" id=\"last_name\" name=\"last_name\" placeholder=\"Last Name\" onChange={handleChange} onBlur={handleBlur}/>\n                        {errors.last_name&&touched.last_name&&(\n                          <div>{errors.last_name}</div>\n                        )}\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"email\" class=\"form-control form-control-user\" id=\"email_address\" name=\"email_address\" placeholder=\"Email Address\" onChange={handleChange} onBlur={handleBlur}/>\n                    {errors.email_address&&touched.email_address&&(\n                      <div>{errors.email_address}</div>\n                    )}\n                </div>\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-6 mb-3 mb-sm-0\">\n                        <input type=\"password\" class=\"form-control form-control-user\" id=\"input_password\" name=\"input_password\" placeholder=\"Password\" onChange={handleChange} onBlur={handleBlur}/>\n                        {errors.input_password&&touched.input_password&&(\n                          <div>{errors.input_password}</div>\n                        )}\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <input type=\"password\" class=\"form-control form-control-user\" id=\"repeat_password\" name=\"repeat_password\" placeholder=\"Repeat Password\" onChange={handleChange} onBlur={handleBlur}/>\n                        {errors.repeat_password&&touched.repeat_password&&(\n                          <div>{errors.repeat_password}</div>\n                        )}\n                    </div>\n                </div>\n                <button className=\"btn btn-primary btn-user btn-block\" type=\"submit\"> Register Account</button>\n            </form>\n        )\n    }}\n    </Formik>\n    )\n}\nexport default Register;\n","import React from 'react';\nimport  './rgister.css';\n\nimport RegisterForm from '../../component/registercomponent/Register';\nfunction Register(){\n    return(\n        <div class=\"container\">\n            <div class=\"card o-hidden border-0 shadow-lg my-5\">\n                <div class=\"card-body p-0\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-5 d-none d-lg-block bg-register-image\"></div>\n                        <div class=\"col-lg-7\">\n                            <div class=\"p-5\">\n                                <div class=\"text-center\">\n                                    <h1 class=\"h4 text-gray-900 mb-4\">Create an Account!</h1>\n                                </div>\n\n                                <RegisterForm/>\n                                <div class=\"text-center\">\n                                    <a class=\"small\" href=\"forgot-password.html\">Forgot Password?</a>\n                                </div>\n                                <div class=\"text-center\">\n                                    <a class=\"small\" href=\"login.html\">Already have an account? Login!</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Register;\n","import React from \"react\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Home from '../AppHome';\nimport Administrator from '../admin/Administrator';\nimport Register from '../admin/container/register/Register';\nexport default function BasicExample() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/admin/\" component = {Administrator} />\n      <Route exact path=\"/register/\" component = {Register} />\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport Admin from './router/Admin';\nexport default function BasicExample() {\n  return (\n    <Router>\n      <Admin/>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const data = {\n  loading:null,\n  status:null,\n  message:null,\n};\nconst agentReducer = (state=data,action) =>{\n   switch(action.type) {\n      default:\n      return state;\n   }\n}\nexport default agentReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore,combineReducers,applyMiddleware } from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport agentReducer from './reducers/agentReducer';\nconst rootReducer = combineReducers({\n  agent:agentReducer,\n})\nconst store = createStore(rootReducer,applyMiddleware(thunk));\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}